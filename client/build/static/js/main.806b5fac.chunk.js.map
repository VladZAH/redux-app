{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/posts.js","api/index.js","images/memories.png","components/Form/styles.js","components/Form/Form.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","styles.js","App.js","index.js"],"names":["CREATE","UPDATE","FETCH_ALL","LIKE","DELETE","combineReducers","posts","action","type","filter","post","_id","payload","map","url","updatePost","id","updatedData","axios","patch","deletePost","delete","likePost","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","Form","currentId","setCurrentId","classes","useStyles","useSelector","state","find","p","useState","creator","title","message","tags","selectedFile","postData","setPostData","dispatch","useDispatch","useEffect","clear","Paper","className","autoComplete","noValidate","onSubmit","e","preventDefault","a","api","data","console","log","newPost","createPost","Typography","variant","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","Button","color","size","onClick","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","flexDirection","borderRadius","position","overlay","top","left","overlay2","right","grid","details","cardActions","Post","Card","CardMedia","image","postMessage","moment","createdAt","fromNow","style","fontSize","tag","gutterBottom","CardContent","component","CardActions","likeCount","mainContainer","alignItems","smMargin","actionDiv","textAlign","Posts","length","Grid","container","item","xs","sm","CircularProgress","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.806b5fac.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const LIKE = 'LIKE';\nexport const DELETE = 'DELETE';","import {combineReducers } from 'redux';\nimport posts from './posts'; \n\nexport default combineReducers({ posts });","import {UPDATE, FETCH_ALL, DELETE, CREATE, LIKE} from '../constants/actionTypes'\nexport default (posts = [], action) => {\n    switch (action.type){\n        case DELETE:\n            return posts.filter((post) => post._id !== action.payload);\n        case UPDATE:\n        case LIKE:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post)        \n        case FETCH_ALL:\n            return action.payload;\n        case CREATE:\n            return [...posts, action.payload];\n        default:\n            return posts;\n    }\n}","import axios from 'axios';\n\nconst url = 'https://blogofmine-project.herokuapp.com/posts';\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedData) => axios.patch(`${url}/${id}`, updatedData);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    fileInput: {\n        width: '97%',\n        margin: '10px 0',\n    },\n    buttonSubmit: {\n        marginBottom: 10,\n    },\n}));","import React, {useState, useEffect} from 'react';\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({currentId, setCurrentId}) => {\n    const classes = useStyles();\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '', \n        tags: '',\n        selectedFile: ''\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId){\n            dispatch(updatePost(currentId, postData));\n        }else{\n            dispatch(createPost(postData));\n        }\n        clear()\n    }\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({        \n            creator: '',\n            title: '',\n            message: '', \n            tags: '',\n            selectedFile: ''\n        })\n    }\n\n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root}${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6'>{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField \n                    name='creator' \n                    variant='outlined' \n                    label=\"Creator\" \n                    fullWidth\n                    value={postData.creator}\n                    onChange={(e) => {setPostData({...postData, creator: e.target.value})}}\n                />\n                <TextField \n                    name='title' \n                    variant='outlined' \n                    label=\"Title\" \n                    fullWidth\n                    value={postData.title}\n                    onChange={(e) => {setPostData({...postData, title: e.target.value})}}\n                />\n                <TextField \n                    name='message' \n                    variant='outlined' \n                    label=\"Message\" \n                    fullWidth\n                    value={postData.message}\n                    onChange={(e) => {setPostData({...postData, message: e.target.value})}}\n                />\n                <TextField \n                    name='tags' \n                    variant='outlined' \n                    label=\"Tags\" \n                    fullWidth\n                    value={postData.tags}\n                    onChange={(e) => setPostData({...postData, tags: e.target.value.split(',') })}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type='file'\n                        multiple={false}\n                        onDone={({base64}) => setPostData({...postData, selectedFile: base64})}\n                    />\n                </div>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant='contained' \n                    color='primary'\n                    size='large'\n                    type='submit'\n                    fullWidth>\n                    Submit\n                </Button>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant='contained' \n                    color='secondary'\n                    size='small'\n                    onClick={clear}\n                    fullWidth>\n                    Clear\n                </Button>                \n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;","import {UPDATE, FETCH_ALL, DELETE, CREATE, LIKE} from '../constants/actionTypes'\nimport * as api from '../api';\n\nexport const getPosts = () => async(dispatch) => {\n    try {\n        const {data} = await api.fetchPosts();\n\n        dispatch({\n            type: FETCH_ALL,\n            payload: data\n        });\n    } catch(error){\n        console.log(error)\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const {data} = await api.createPost(post);\n\n        dispatch({type: CREATE, payload: data})\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const {data} = await api.updatePost(id, post);\n\n        dispatch({type: UPDATE, payload: data})\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async(dispatch) => {\n    try {\n        await api.deletePost(id);\n\n        dispatch({type: DELETE, payload: id});\n    } catch (error){\n        console.log(error);\n    }\n}   \n\nexport const likePost = (id) => async(dispatch) => {\n    try {\n        const {data} = await api.likePost(id);\n\n        dispatch({type: LIKE, payload: data})\n    } catch (error){\n        console.log(error);\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backgroundBlendMode: 'darken',\n    },\n    border: {\n        border: 'solid',\n    },\n    fullHeightCard: {\n        height: '100%',\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        borderRadius: '15px',\n        height: '100%',\n        position: 'relative',\n    },\n    overlay: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: 'white',\n    },\n    overlay2: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: 'white',\n    },\n    grid: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '20px',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    cardActions: {\n        padding: '0 16px 8px 16px',\n        display: 'flex',\n        justifyContent: 'space-between',\n    }\n});","import React from 'react';\nimport {Card, CardActions, CardContent, CardMedia, Button, Typography} from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport {useDispatch} from 'react-redux';\n\nimport {deletePost, likePost} from '../../../actions/posts'\nimport useStyles from './styles';\n\n\nconst Post = ({post, setCurrentId}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    return(\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={post.selectedFile} title={postMessage.title}/>\n            <div className={classes.overlay}>\n                <Typography variant='h6'>{post.creator}</Typography>\n                <Typography variant='body2'>{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button style={{color:'white'}} size=\"small\" onClick={() => setCurrentId(post._id)}>\n                    <MoreHorizIcon fontSize=\"default\" />\n                </Button>\n            </div>\n            <div className={classes.details}>\n                <Typography variant='body2' color=\"textSecondary\">{post.tags.map(tag => `#${tag} `)}</Typography>    \n            </div>\n            <Typography className={classes.title} variant='h5' gutterBottom>{post.title}</Typography>    \n            <CardContent>\n                 <Typography variant='body2' color='textSecondary' component='p'>{post.message}</Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button size='small' color='primary' onClick={() => dispatch(likePost(post._id))}>\n                    <ThumbUpAltIcon fontSize=\"small\" /> \n                        {post.likeCount}\n                </Button>\n                <Button size='small' color='primary' onClick={() => dispatch(deletePost(post._id))} >\n                    <DeleteIcon fontSize=\"small\" />\n                    Delete\n                </Button>                \n            </CardActions>\n        </Card>\n    );\n}\n\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    mainContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    smMargin: {\n        margin: theme.spacing(1),\n    },\n    actionDiv: {\n        textAlign: 'center',\n    }\n}));","import React from 'react';\nimport {Grid, CircularProgress} from '@material-ui/core';\nimport {useSelector} from 'react-redux'\nimport Post from './Post/Post'\nimport useStyles from './styles';\n\n\nconst Posts = ({setCurrentId}) => {\n    const posts = useSelector((state) => state.posts);\n    const classes = useStyles();\n\n    console.log(posts)\n    return(\n        !posts.length ? <CircularProgress /> :\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n                {posts.map(post => (\n                    <Grid key={post._id} item xs={12} sm={6}> \n                        <Post post={post} setCurrentId={setCurrentId} />\n                    </Grid>\n                ))}\n            </Grid>\n    );\n}\n\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    heading: {\n        color: 'rgba(0,183,255, 1)',\n    },\n    image: {\n        marginLeft: '15px',\n    },\n    [theme.breakpoints.down('sm')]: {\n        mainContainer: {\n            flexDirection: 'column-reverse',\n        }    \n    }\n}));","import React, {useEffect, useState} from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport {useDispatch} from 'react-redux';\n\nimport {getPosts} from './actions/posts'\nimport memories from './images/memories.png'\nimport Form from './components/Form/Form'\nimport Posts from './components/Posts/Posts'\nimport useStyles from './styles';\n\nconst App = () => {\n    const [currentId, setCurrentId] = useState(null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(()=> {\n        dispatch(getPosts());\n    }, [currentId, dispatch]);\n\n    return(\n        <Container maxWidth='lg'>\n            <AppBar className={classes.appBar} position='static' color='inherit'>\n                <Typography className={classes.heading} variant='h3' align='center'>Memories</Typography>\n                <img className={classes.image} src={memories} alt='memories' height='60' />\n            </AppBar>\n            <Grow in>\n                <Container>\n                    <Grid container className={classes.mainContainer} justify='space-between' alignItems='stretch' spacing={3}>\n                        <Grid item xs={12} sm={7}>\n                            <Posts setCurrentId={setCurrentId} />\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n        </Container>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />    \n    </Provider>, \n    document.getElementById('root'));"],"sourceRoot":""}