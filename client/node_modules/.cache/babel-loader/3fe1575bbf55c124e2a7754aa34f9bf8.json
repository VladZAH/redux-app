{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/volodymyr/ReactProjects/BLOG/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { GoogleLogin } from 'react-google-login';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport Input from './Input';\nimport Icon from './icon';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [isSignUp, setSignUp] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const switchMode = () => {\n    setSignUp(previsSignUp => !previsSignUp);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailture = () => {\n    console.log('Google Sign In was unsuccessfull');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignUp ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"emai\",\n            label: \"Email adress\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), isSignUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignUp ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"403913941642-bthqfjgjum3tbl7e35mmrlhrc98ddpm2.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 44\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailture,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignUp ? 'Already have an account? Sign In' : 'Don\\'t have an account? Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"EJZGVxaRsd0e2B0TIJUGQUxfkcg=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/volodymyr/ReactProjects/BLOG/client/src/components/Auth/Auth.js"],"names":["React","useState","useStyles","useDispatch","useHistory","LockOutlinedIcon","GoogleLogin","Avatar","Button","Paper","Grid","Typography","Container","TextField","Input","Icon","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","dispatch","history","isSignUp","setSignUp","showPassword","setShowPassword","formData","setFormData","handleSubmit","handleChange","handleShowPassword","prevShowPassword","switchMode","previsSignUp","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleFailture","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport useStyles from './styles';\nimport {useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport {GoogleLogin} from 'react-google-login';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport Input from './Input';\nimport Icon from './icon';\n\nconst initialState = {firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\n\nconst Auth = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [isSignUp, setSignUp] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n\n    const handleSubmit = () => {\n\n    };\n\n    const handleChange = () => {\n\n    };\n\n    const handleShowPassword = () => {\n        setShowPassword((prevShowPassword) => !prevShowPassword)\n    }\n\n    const switchMode = () => {\n        setSignUp((previsSignUp) => !previsSignUp)\n        handleShowPassword(false)\n    }\n    \n    const googleSuccess = async (res) => {\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n\n        try {\n            dispatch({type: 'AUTH', data: {result, token}});\n            history.push('/');\n        }catch (error){\n            console.log(error)\n        }\n    }\n    const googleFailture = () => {\n        console.log('Google Sign In was unsuccessfull')\n    }\n\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant='h5'>{isSignUp ? 'Sign Up' : 'Sign In'}</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        {\n                            isSignUp && (\n                                <>\n                                    <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half/>\n                                    <Input name='lastName' label='Last Name' handleChange={handleChange} half/>\n                                </>\n                            )\n                        }\n                        <Input name='emai' label='Email adress' handleChange={handleChange} type='email' />\n                        <Input name='password' label='password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                        {isSignUp && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} type='password' />}\n                    </Grid>\n                    <Button \n                        type='submit' \n                        fullWidth variant='contained' \n                        color='primary' \n                        className={classes.submit}\n                    >\n                        {isSignUp ? 'Sign Up' : 'Sign In'}\n                    </Button>\n                    <GoogleLogin \n                        clientId='403913941642-bthqfjgjum3tbl7e35mmrlhrc98ddpm2.apps.googleusercontent.com'\n                        render={(renderProps) => (\n                            <Button \n                                className={classes.googleButton} \n                                color='primary' \n                                fullWidth \n                                onClick={renderProps.onClick} \n                                disabled={renderProps.disabled} \n                                startIcon={<Icon />} \n                                variant='contained'\n                            >\n                                Google Sign In\n                            </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailture}\n                        cookiePolicy=\"single_host_origin\"\n                    /> \n                    <Grid container justify='flex-end'>                       \n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                {isSignUp ? 'Already have an account? Sign In' : 'Don\\'t have an account? Sign Up'}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    );\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}