{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/volodymyr/ReactProjects/BLOG/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  var _user$result3;\n\n  const classes = useStyles();\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create your own memories and like other's memories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root}${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => {\n          setPostData({ ...postData,\n            creator: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => {\n          setPostData({ ...postData,\n            title: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => {\n          setPostData({ ...postData,\n            message: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"9cjX380QrfTzF6wv2yJqO3iUe0Y=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/volodymyr/ReactProjects/BLOG/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","classes","post","state","posts","find","p","_id","postData","setPostData","creator","title","message","tags","selectedFile","user","JSON","parse","localStorage","getItem","dispatch","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({currentId, setCurrentId}) => {\n    const classes = useStyles();\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '', \n        tags: '',\n        selectedFile: ''\n    });\n\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        if (currentId === 0) {\n            dispatch(createPost({ ...postData, name: user?.result?.name }));\n            clear();\n        } else {\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n            clear();\n        }\n    };\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({        \n            creator: '',\n            title: '',\n            message: '', \n            tags: '',\n            selectedFile: ''\n        })\n    }\n\n    if (!user?.result?.name) {\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant=\"h6\" align=\"center\">\n                Please Sign In to create your own memories and like other's memories.\n                </Typography>\n            </Paper>\n        );\n      }\n\n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root}${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6'>{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField \n                    name='creator' \n                    variant='outlined' \n                    label=\"Creator\" \n                    fullWidth\n                    value={postData.creator}\n                    onChange={(e) => {setPostData({...postData, creator: e.target.value})}}\n                />\n                <TextField \n                    name='title' \n                    variant='outlined' \n                    label=\"Title\" \n                    fullWidth\n                    value={postData.title}\n                    onChange={(e) => {setPostData({...postData, title: e.target.value})}}\n                />\n                <TextField \n                    name='message' \n                    variant='outlined' \n                    label=\"Message\" \n                    fullWidth\n                    value={postData.message}\n                    onChange={(e) => {setPostData({...postData, message: e.target.value})}}\n                />\n                <TextField \n                    name='tags' \n                    variant='outlined' \n                    label=\"Tags\" \n                    fullWidth\n                    value={postData.tags}\n                    onChange={(e) => setPostData({...postData, tags: e.target.value.split(',') })}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type='file'\n                        multiple={false}\n                        onDone={({base64}) => setPostData({...postData, selectedFile: base64})}\n                    />\n                </div>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant='contained' \n                    color='primary'\n                    size='large'\n                    type='submit'\n                    fullWidth>\n                    Submit\n                </Button>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant='contained' \n                    color='secondary'\n                    size='small'\n                    onClick={clear}\n                    fullWidth>\n                    Clear\n                </Button>                \n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}