{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"/Users/volodymyr/ReactProjects/BLOG/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/volodymyr/ReactProjects/BLOG/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{TextField,Button,Typography,Paper}from'@material-ui/core';import FileBase from'react-file-base64';import{useDispatch,useSelector}from'react-redux';import useStyles from'./styles';import{createPost,updatePost}from'../../actions/posts';var Form=function Form(_ref){var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;var classes=useStyles();var post=useSelector(function(state){return currentId?state.posts.find(function(p){return p._id===currentId;}):null;});var _useState=useState({creator:'',title:'',message:'',tags:'',selectedFile:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];var dispatch=useDispatch();useEffect(function(){if(post)setPostData(post);},[post]);var handleSubmit=function handleSubmit(e){e.preventDefault();if(currentId){dispatch(updatePost(currentId,postData));}else{dispatch(createPost(postData));}clear();};var clear=function clear(){setCurrentId(null);setPostData({creator:'',title:'',message:'',tags:'',selectedFile:''});};return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root).concat(classes.form),onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[currentId?'Editing':'Creating',\" a Memory\"]}),/*#__PURE__*/_jsx(TextField,{name:\"creator\",variant:\"outlined\",label:\"Creator\",fullWidth:true,value:postData.creator,onChange:function onChange(e){setPostData(_objectSpread(_objectSpread({},postData),{},{creator:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"title\",variant:\"outlined\",label:\"Title\",fullWidth:true,value:postData.title,onChange:function onChange(e){setPostData(_objectSpread(_objectSpread({},postData),{},{title:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"message\",variant:\"outlined\",label:\"Message\",fullWidth:true,value:postData.message,onChange:function onChange(e){setPostData(_objectSpread(_objectSpread({},postData),{},{message:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"tags\",variant:\"outlined\",label:\"Tags\",fullWidth:true,value:postData.tags,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{tags:e.target.value.split(',')}));}}),/*#__PURE__*/_jsx(\"div\",{className:classes.fileInput,children:/*#__PURE__*/_jsx(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref2){var base64=_ref2.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})}),/*#__PURE__*/_jsx(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true,children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true,children:\"Clear\"})]})});};export default Form;","map":{"version":3,"sources":["/Users/volodymyr/ReactProjects/BLOG/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","classes","post","state","posts","find","p","_id","creator","title","message","tags","selectedFile","postData","setPostData","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({currentId, setCurrentId}) => {\n    const classes = useStyles();\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '', \n        tags: '',\n        selectedFile: ''\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId){\n            dispatch(updatePost(currentId, postData));\n        }else{\n            dispatch(createPost(postData));\n        }\n        clear()\n    }\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({        \n            creator: '',\n            title: '',\n            message: '', \n            tags: '',\n            selectedFile: ''\n        })\n    }\n\n    return(\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root}${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6'>{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField \n                    name='creator' \n                    variant='outlined' \n                    label=\"Creator\" \n                    fullWidth\n                    value={postData.creator}\n                    onChange={(e) => {setPostData({...postData, creator: e.target.value})}}\n                />\n                <TextField \n                    name='title' \n                    variant='outlined' \n                    label=\"Title\" \n                    fullWidth\n                    value={postData.title}\n                    onChange={(e) => {setPostData({...postData, title: e.target.value})}}\n                />\n                <TextField \n                    name='message' \n                    variant='outlined' \n                    label=\"Message\" \n                    fullWidth\n                    value={postData.message}\n                    onChange={(e) => {setPostData({...postData, message: e.target.value})}}\n                />\n                <TextField \n                    name='tags' \n                    variant='outlined' \n                    label=\"Tags\" \n                    fullWidth\n                    value={postData.tags}\n                    onChange={(e) => setPostData({...postData, tags: e.target.value.split(',') })}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type='file'\n                        multiple={false}\n                        onDone={({base64}) => setPostData({...postData, selectedFile: base64})}\n                    />\n                </div>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant='contained' \n                    color='primary'\n                    size='large'\n                    type='submit'\n                    fullWidth>\n                    Submit\n                </Button>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant='contained' \n                    color='secondary'\n                    size='small'\n                    onClick={clear}\n                    fullWidth>\n                    Clear\n                </Button>                \n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}